// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.1.2'
    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    classpath 'org.jacoco:org.jacoco.core:0.7.6.201602180812'
    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    jcenter()
    maven { url "https://jitpack.io" }
  }
  // Workaround to prevent Gradle from stealing focus from other apps during tests run/etc.
  // https://gist.github.com/artem-zinnatullin/4c250e04636e25797165
  tasks.withType(JavaForkOptions) {
    jvmArgs '-Djava.awt.headless=true'
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

ext.preDexLibs = !project.hasProperty('disablePreDex')

ext {
  compileSdkVersion = 23
  buildToolsVersion = "23.0.2"
  minSdkVersion = 15
  targetSdkVersion = 23
  versionCode = 1
  versionName = "1.0.0"
}

subprojects {
  project.plugins.whenPluginAdded { plugin ->
    if ('com.android.build.gradle.AppPlugin'.equals(plugin.class.name) || 'com.android.build.gradle.LibraryPlugin'.equals(plugin.class.name)) {
      // enable or disable pre-dexing
      project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
    }
  }

  afterEvaluate {
    def checkTask = tasks.findByName('check')

    checkTask.dependsOn('pmd')
    checkTask.dependsOn('findbugs')
    checkTask.dependsOn('checkstyle')

    // Log instrumentation tests results.
    tasks.withType(com.android.build.gradle.internal.tasks.AndroidTestTask) { task ->
      task.doFirst {
        logging.level = LogLevel.INFO
      }
      task.doLast {
        logging.level = LogLevel.LIFECYCLE
      }
    }
  }
}